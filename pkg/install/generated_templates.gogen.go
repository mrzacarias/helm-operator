// Code generated by vfsgen; DO NOT EDIT.

package install

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// templates statically implements the virtual filesystem provided to vfsgen.
var templates = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
		},
		"/flux-helm-operator-account.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-helm-operator-account.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 948,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x39\x6f\xdc\x30\x10\x85\x7b\xfe\x8a\x01\x5c\x38\x09\x2c\x05\xee\x02\x75\xb6\x8b\x14\x09\x52\x28\x47\x13\xa4\x18\x92\x4f\x59\xc6\x5c\x8e\x30\x24\x37\x87\xb0\xff\x3d\x90\xb4\x06\xbc\x8e\xed\x34\xdb\x8d\xe6\xd2\x9b\xc7\xaf\x69\x1a\x73\x46\x9f\x36\xa0\x0c\xdd\x05\x07\x62\xe7\xa4\xa6\x72\x41\x2e\xd6\x5c\xa0\xa4\x12\x91\x2f\x88\x93\x3f\x4a\x91\x0d\xc9\x87\xf4\x9d\x58\x61\xce\x48\x52\xfc\x4d\x09\xf0\xf0\x34\x88\xd2\xbb\x6a\xa1\x09\x05\x99\x7e\x86\xb2\x59\x46\x1a\xcb\x19\x7e\xfe\x03\x72\x26\x27\xa9\xa8\x44\x7a\xd1\x5f\x5f\xdd\xbc\x6c\x0d\x8f\xe1\x0b\x34\x07\x49\x1d\xed\x2e\xcd\x6d\x48\xbe\xa3\x8f\xab\xaa\xab\x55\x94\xd9\xa2\xb0\xe7\xc2\x9d\x21\x8a\x6c\x11\xf3\x1c\x11\x25\xde\xa2\xa3\x21\xd6\x5f\xcd\x06\x71\xdb\xc8\x08\xe5\x22\x6a\x9e\x2e\x4d\x13\x85\x81\xda\x0f\xbc\x45\x1e\xd9\x81\xf6\xfb\x43\xf7\xf2\xd9\xd1\x34\x1d\x57\xa7\x89\x90\xfc\x7e\x6f\x66\xcf\xee\x8b\x55\xcb\xae\xe5\x5a\x36\xa2\xe1\x0f\x97\x20\xa9\xbd\x7d\x93\xdb\x20\xaf\x77\x97\x16\x85\xef\x6e\xb9\x59\xdd\xeb\x25\xe2\x94\x87\x18\xad\x11\xcb\x78\x43\x3c\x86\xb7\x2a\x75\xcc\x1d\x7d\x3d\x7f\x75\xfe\x6d\xd9\xa9\xc8\x52\xd5\xe1\x28\xb9\x83\xda\x7b\x89\x86\x92\xa4\xfe\xd0\xf8\xb9\x7f\xff\x74\xef\x09\xae\xbf\x5e\xc9\x39\xad\x09\x12\xd1\x63\x98\x17\xdc\x99\xf0\x8c\x36\x43\xf4\xef\x9b\x3c\xb3\x3d\x57\xfb\x03\xae\x1c\x5c\x7e\x14\xcd\xff\x08\x7f\x88\xd6\x43\xf6\x1e\xa3\x2d\xe6\x39\xf2\x18\xb8\xc6\xb2\xe2\x37\x53\xfa\x37\x00\x00\xff\xff\xad\xec\xff\x2b\xb4\x03\x00\x00"),
		},
		"/flux-helm-release-crd.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-helm-release-crd.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 8741,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x6d\x6f\xdb\xc8\x11\xfe\xee\x5f\x31\x4d\x0b\x38\x29\x64\xc5\x49\xda\xa2\x15\x70\xb8\x0b\x2e\xb8\x26\x4d\xee\x62\xd8\x71\xfa\xc1\x48\x81\x11\x39\x24\xb7\xda\x17\xde\xbe\xc8\x56\x8b\xfe\xf7\x62\x76\x49\x49\xa4\x28\x4a\x76\xdc\x02\xc5\x95\x9f\x24\xee\xee\xec\x33\x33\xcf\xbc\xec\xf2\xec\xec\xec\x04\x6b\xf1\x99\xac\x13\x46\xcf\x00\x6b\x41\x77\x9e\x34\xff\x73\xd3\xc5\x1f\xdd\x54\x98\xe7\xcb\x17\x73\xf2\xf8\xe2\x64\x21\x74\x3e\x83\xef\x83\xf3\x46\x5d\x92\x33\xc1\x66\xf4\x86\x0a\xa1\x85\x17\x46\x9f\x28\xf2\x98\xa3\xc7\xd9\x09\x80\x46\x45\x33\xa8\x48\x2a\x4b\x92\xd0\x91\x9b\xf2\x9f\x69\x21\xc3\x5d\x96\x4f\x85\x39\x71\x35\x65\x3c\xb3\xb4\x26\xd4\x69\xea\xd6\x68\x92\xe0\x78\x02\x40\xda\xf7\x2d\x49\x75\x99\x84\xc5\xb7\x52\x38\xff\xbe\x3f\xf2\x41\x38\x1f\x47\x6b\x19\x2c\xca\x2e\x84\x38\xe0\x2a\x63\xfd\x4f\x1b\xe1\x67\x50\xd9\x13\x00\x97\x99\x9a\x66\x10\x07\x6a\xcc\x28\x3f\x01\xc0\x3c\x8f\x9a\xa1\xbc\xb0\x42\x7b\xb2\xdf\x1b\x19\x94\x5e\x2f\xfc\xcb\xd5\xc7\x9f\x2e\xd0\x57\x33\x98\x3a\x8f\x3e\xb8\x69\xb3\x13\x4b\x89\x73\x5a\x43\x6c\xe3\x06\xf0\x2b\xde\xca\x79\x2b\x74\x79\x48\xd4\x55\xfc\xd7\x11\xd6\x79\x75\x94\xac\xcc\xe8\xa4\x89\xbb\xf9\xf6\xe9\x77\x53\x5e\xf3\xcd\x37\x4f\x1a\x50\xf9\x93\x67\x5f\xa6\x8a\x9c\xc3\xb2\x0b\xfa\xc7\xce\xbb\xf1\x8d\x5a\xdf\x4f\x33\x4b\xc8\x3b\x7d\x12\x8a\x9c\x47\x55\x77\x44\xbe\xee\x89\xcb\xd1\xf3\x0b\x17\xe6\xb6\xe1\x53\x63\xdc\x04\x7c\x06\xff\xfc\xd7\x09\xc0\xb2\x65\xe7\xf2\xc5\xe6\xdf\xda\x0b\x49\x72\x1c\x8a\x2b\xc9\x2e\x29\x9f\x81\xb7\xa1\xdd\xcb\x79\x63\xb1\xa4\xf5\xbb\x25\x4a\x91\x47\x94\x49\x86\xa9\x49\xbf\xbe\x78\xf7\xf9\xd5\x55\x56\x91\xc2\x59\xb3\xac\xb6\xa6\x26\xeb\x45\x8b\x29\x8a\x6a\x58\xdb\x3e\x96\x7e\x0e\xc2\xf2\x7e\x37\xa7\x59\x85\xd6\x9f\x7e\xd9\x1a\x1d\x92\xc0\x0f\x93\xb2\x0d\xb9\xce\x00\x40\x4e\x2e\xb3\xa2\x8e\xe0\xe0\x53\x45\x91\xdc\xad\xce\xe0\x2b\xe1\xa0\x61\x06\x78\xb4\x25\x79\x37\x85\x77\x05\x68\xe3\xc1\x85\xba\x96\x82\xf2\x09\x08\x0f\xb7\x42\x4a\xc8\xa9\xc0\x20\x3d\x78\xd3\xdb\x05\x60\xf9\x72\xda\x7b\xb7\xe3\xe0\x2d\x3d\xd0\x7b\xb2\x7a\x06\x4f\xfe\xb6\xbc\x79\x39\x79\xf5\xe5\x37\x4f\x3a\x33\xb6\x68\x7f\x9c\x3e\xad\x0a\xec\xbb\x11\xfc\x73\x82\x92\x34\x59\xf4\x94\xc3\x7c\x05\x58\x14\xe2\x4e\xe8\x12\x7c\x45\x3b\x1a\xe9\x36\x74\xc1\x1b\x9e\x00\x2d\xa5\xd2\x2e\x0f\xd2\xf6\x06\xcf\xfe\x71\x7e\xf6\xa7\x2f\x4f\x6f\xce\x9a\x5f\xbf\x6d\x5f\x3d\xfb\xb6\x67\x04\x85\x77\x6f\x05\x53\x6d\x75\xd0\x06\x0a\xef\x84\x0a\x0a\x74\x50\x73\xb2\x60\x8a\xb5\x41\x2c\x2d\x45\x64\x37\x2b\xb1\x20\xaa\x27\xad\x13\xe3\x9b\x17\xe7\x83\x6a\x70\x72\x2a\xc9\xf6\xc6\x0a\x63\x15\xfa\x38\xfa\xea\x65\x67\x2c\x31\x67\x9d\xeb\xee\xef\xb3\xb8\x6c\xc0\x71\x6c\xf6\x8d\x1f\x5a\x1f\xf2\x5b\xb7\x49\x89\x9b\x07\xdd\xae\xa3\x92\xe8\xff\xb8\xb7\xbc\x50\x64\x82\x1f\x55\x3d\xaa\x2d\xb4\xf3\x28\x25\x18\x0b\xa1\x2e\x2d\xe6\xd4\xae\x05\xa1\xc1\x11\xe7\x56\xf7\x30\xaf\xfc\xe1\x77\xbd\x28\x72\xe4\x3f\xa3\x0c\xfd\x74\xd1\x83\xf5\xae\x58\x5b\x3c\x99\x38\x2e\xe4\xac\x16\xc8\x81\xd1\x31\xbd\xb4\x60\x07\x91\xcd\x8d\x91\x84\xba\x33\x76\x8b\x62\xdc\x1a\x7f\x45\xe1\x19\x3d\xa0\xde\x58\xc2\x40\x66\x54\x2d\xc9\x13\xcc\xa9\x30\x96\xb9\x6d\x17\x1c\xa2\x2d\x5d\xd0\x81\x0b\x59\x46\xce\x15\x41\x1e\x8d\xa6\x30\x36\xa3\xeb\xb4\xcb\xfd\x8c\x11\x57\x26\xd7\xad\x51\x56\xd6\x84\xb2\x82\x9c\x18\xe8\x73\x4b\xb1\x48\x1d\x6f\x1a\x6b\xa4\x9c\x63\xb6\xe8\x03\x49\x2b\xcc\xfc\xef\x94\xf9\x3e\x2b\xf7\x64\x7e\x7e\x48\xe3\x5c\xee\x68\x35\xa8\x19\xf9\x49\xd2\xaa\x26\xcb\xc4\x59\x43\x71\xd1\x13\x9d\x72\x60\x36\x6e\x29\x50\xc8\x60\xa9\x4f\xcb\x71\x2d\xa3\xa6\xe4\x77\xd3\xd7\x5e\x64\x1c\xbb\xed\x96\xa6\x00\x8c\xe8\x38\x53\x63\xb6\x58\xc3\x6a\x93\x00\x8b\x66\x27\x05\xed\x45\x9f\x07\x0d\xb4\xad\xcc\x88\xca\x04\xed\x53\x66\xe4\x75\x0e\xa2\xa6\x98\x55\xb1\x33\xbb\x9f\x56\x0a\xef\x2e\x93\x94\x83\xaa\x7d\x1a\xc5\xe0\x2b\xf4\xdc\x40\x06\x99\xb3\x4a\x9c\x79\x54\xcd\xb5\x29\x86\x45\xa3\xfe\xa0\x6e\x1d\x93\x88\x8d\x44\xb4\xd4\xf0\x21\xef\x66\xfa\xdf\x4f\xe0\x1c\xe8\xe7\x80\xd2\x81\xd0\xb1\xc7\xde\xcd\x9f\xe3\x99\x06\x46\xb3\x0d\xb4\x51\x76\x3f\x22\xa6\xf0\x5a\x67\xec\x50\x73\x0b\xb7\x2f\xc2\x58\x53\x4d\x94\x3f\xc0\x67\xad\x88\x21\x74\xe3\x2b\x73\xe1\xd8\x9e\x6f\x8d\x59\x1c\xf6\x77\x37\xc8\x2c\x2d\x49\x7b\xa8\x78\x29\x14\xd6\x28\xb0\x41\x6b\xce\x66\x79\xb0\x31\xa9\x35\xe1\x77\x6f\x50\x7b\xca\xcd\x0e\x1e\x6e\x9b\xb7\xea\x0a\x33\xe1\x76\x93\x77\x57\x20\x74\x2e\x96\x22\x0f\x28\xe1\x7d\x98\x93\xd5\xe4\x39\xe7\xd7\xdc\x23\x09\xa3\x27\x83\xe4\xdb\xe6\xd5\xab\xf3\xf3\x3d\x45\x0b\xbe\x9a\x4e\x43\x25\x64\xdc\xe2\x51\xb7\x98\x11\x52\xf4\x0b\xdd\xeb\x8b\x2e\x4c\xee\x52\x6e\x79\x43\xb5\x34\x2b\x45\xba\x9f\x6a\xd3\xc3\x81\x24\x34\x07\x21\x61\xbe\x8a\xe7\x87\x9d\x92\x94\x7a\x8d\xc3\x65\x09\x46\xdd\x19\xeb\xec\x0f\x42\xd2\x15\x53\xd4\x8f\xd7\xea\x37\x54\x5b\xca\xb8\x7f\xfd\x15\x5c\x3b\x6a\x8a\xf4\x0f\xd6\xa8\xa9\x8b\xcb\xdf\xd3\xea\x92\x8a\xd8\x65\x10\xf6\xc3\x24\x81\x40\x6b\x71\xd5\x1b\x11\x9e\xd4\x00\xbb\x47\x2a\x52\xf7\xac\xc2\x9d\x56\xe7\xa8\x92\x9e\xb1\xb2\xd5\x9c\xe1\xf6\x30\x6c\x4b\x67\xee\x2b\xd9\x67\xb1\xed\x8b\x4a\x4e\x40\x05\xe7\x39\x65\x0a\xbd\xee\x06\xb7\x1a\xc5\xa6\x0f\xec\x9f\xf0\x87\xb5\x1b\xe8\x02\x37\x56\x1d\x2e\xd1\x8f\x65\xc1\x71\xf3\x64\x46\x17\xa2\xfc\x11\xeb\xe4\xd3\x61\x4b\x8d\xca\x87\xe3\xbc\x74\x18\x0a\x8c\x7a\x0b\xc6\x3c\x96\xb4\x50\x58\x3f\x92\xd3\x60\xbc\x7d\x6f\x9f\x05\x0d\xf6\x1d\x03\x60\xdf\xd3\xaa\x45\xb4\xc6\xca\x99\xad\x24\x1f\x5f\x36\x7d\x30\xa7\xef\x6e\x49\x4d\x03\xd3\x15\xaa\xe1\xfe\xe3\x48\xa4\xa6\x4e\x77\x42\x47\xc2\x6d\xf3\xdd\x26\xdb\x34\xc5\x7f\x89\xb2\xb5\x79\x0b\x59\x48\xe2\x3e\x47\x1b\x90\x46\x97\x64\x41\xa1\xce\x91\x8f\x94\x07\x00\xef\x2b\x3b\xe9\xd1\xfb\x0e\x7a\x7b\x20\x7f\xea\x9c\xe2\x84\x86\xdb\x4a\x64\x55\xcf\xe2\x74\x27\x9c\x1f\xaa\x21\x47\x19\x72\x3b\xf9\xfd\x8f\x06\xca\xa3\xa6\xb6\x23\x4c\x06\x0f\x8d\x92\x04\xf4\xff\x21\xf2\x5f\x0a\x91\xc6\xdc\x5f\x17\x1f\x74\xe7\xc9\x6a\x94\x57\xb1\xcd\x7e\x9c\x20\x09\x56\x3e\x38\x46\x82\x3d\xd6\x99\xd7\x97\x1f\xba\x3e\xfb\x85\xb1\x29\xde\x02\x73\x7b\xf8\x38\x4e\xab\xd1\x57\x0f\xf6\x1a\x2f\x3e\xd2\x6a\x3c\x15\x6e\x85\xaf\x9a\xa4\x11\xef\x90\xa2\x2e\xf0\x34\x9e\x84\x4a\xe1\xc1\x52\x6d\x9e\xc1\x6d\x45\xb6\xe3\x5c\x36\xa1\x34\xb1\xcb\xfd\xa5\xf8\xd9\x68\xfa\x38\xe0\xde\xb3\xee\x07\x81\x6e\x43\x38\xe0\xc6\xee\xfc\xed\xa2\x78\x70\xf2\x4e\x86\x38\xb8\x62\x9b\x99\xbd\xc9\xcb\xc3\xb7\x8e\x99\xd1\x9e\xd2\x75\xc8\xfe\xb8\xde\x4b\xed\xb8\x77\x5f\xfe\xa0\x11\xbb\x98\x4b\xe1\x4f\x27\xb0\x2f\x0a\xc6\x23\xa0\x1c\x3e\x8d\xf6\xf4\xfa\xb3\xf0\x31\x67\xd1\xb4\x9c\xf2\x92\xef\x4a\xe1\xab\x30\x9f\x66\x46\xcd\x8c\x2d\x9f\x33\xe7\xef\x77\x1a\x69\x9f\xf6\xb0\xcc\x91\xf3\xeb\x78\x51\x9e\x53\x21\x74\xfa\x94\xf1\xf1\xf5\xd5\xc0\xa2\xfd\x01\xdb\xc1\x7c\xc1\xc1\x2a\xb4\x13\x79\xba\x5c\x6f\x63\xd3\x09\xa6\x74\x13\xa0\x6d\xdb\xd1\x44\xb1\x18\xae\x45\x07\xb4\xb0\xfb\x92\xd8\x8e\x0d\xe7\x16\x75\x56\x75\xdb\x09\x85\xce\x0f\xde\x23\x1c\xee\x0f\x17\xa2\x7e\x43\xf5\x75\xbc\x5e\x3a\x02\x41\x9b\x0c\x72\x43\x2e\x9a\xda\x06\x0d\xa7\x39\xd5\xa7\xed\x15\xd5\x53\x74\x2e\x28\x6a\xd9\xa5\x48\xfb\x4d\xf6\x42\x99\xae\x0d\x8a\x20\x0b\x21\x25\xe5\xcf\x46\x40\x0f\xe7\x84\x2e\x6f\x37\xde\x60\xfa\xc6\xf6\x74\x02\xa7\xcd\x67\xbc\x7b\x33\x79\x23\xed\x08\x53\x34\x1f\x6b\xd6\x6c\xb8\xbe\xfc\xf0\x75\xfc\x0d\x56\x1e\xcb\xdf\x23\x6f\x08\xb6\x68\xa9\x87\xbe\x0b\x1d\x01\x6f\x39\xfc\xf9\x74\x7c\xb3\x66\xd1\xd7\x99\xc3\x91\x5a\x92\x3d\xd6\x22\x71\xe3\x8b\x20\x65\xba\x2d\x1a\xc6\xfb\xa8\x67\x94\xbe\xff\xe7\xe8\x44\x06\x18\x7c\x05\x4f\x19\xb2\x50\xb5\x8c\xf4\xdf\xc7\xf2\x1d\x6b\xfc\x3b\x00\x00\xff\xff\x07\x32\x7b\x58\x25\x22\x00\x00"),
		},
		"/helm-operator-deployment.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "helm-operator-deployment.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 6207,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\xcd\x8f\xdb\xb8\x15\xbf\xcf\x5f\xf1\x30\x73\xc8\x65\x24\x39\xd8\xec\xa2\x50\x90\x43\xba\xe9\x66\x02\x24\xe9\xa0\x13\x14\xe8\x69\x97\xa6\x9e\x2d\xd6\x14\xa9\x92\x4f\x76\x55\x63\xfb\xb7\x17\x8f\x94\xf5\x61\xd9\x1e\x4f\x7a\x68\x7d\x19\x0d\xc9\xf7\xfd\x7b\x1f\x64\x92\x24\x37\xa2\x56\x7f\x45\xe7\x95\x35\x39\x88\xba\xf6\xd9\xf6\xf5\xcd\x46\x99\x22\x87\x0f\x58\x6b\xdb\x56\x68\xe8\xa6\x42\x12\x85\x20\x91\xdf\x00\x18\x51\x61\x0e\x2b\xdd\xfc\x33\x29\x51\x57\x89\xad\xd1\x09\xb2\x6e\xbf\x07\xb5\x82\xf4\xab\xa8\xd0\xd7\x42\x22\xfc\xfe\x7b\x77\x3a\xfc\x9b\xc3\x7e\x3f\xdd\xdd\xef\x01\x4d\xc1\xc7\x7c\x8d\x92\x59\x3b\xac\xb5\x92\xc2\xe7\xf0\xfa\x06\xc0\xa3\x46\x49\xd6\xf1\x0e\x40\x25\x48\x96\x9f\xc5\x12\xb5\x8f\x0b\xe7\x35\x61\x5a\x72\x82\x70\xdd\xc6\xa3\xd4\xd6\x98\xc3\x5f\x50\x3a\x14\x84\x37\x00\x84\x55\xad\x05\x61\xc7\x7a\x64\x1d\xff\xf4\x44\xca\x45\x39\xfc\x13\xc6\x58\x12\xa4\xac\x19\xd1\xd4\xce\x56\x48\x25\x36\x3e\x55\x36\xf3\xd2\x09\x56\xe1\x96\x5c\x83\xb7\xe1\xd0\xc1\xe6\xf0\x8d\x6e\xab\x24\xbe\x97\xd2\x36\x86\xbe\x5e\x16\xb7\xb5\xba\xa9\xd0\xe7\x9d\xbf\xff\x64\xc4\x52\xe3\x37\xa5\x35\xba\x6f\x9f\x9f\xa2\xd7\xe3\x2f\xe9\x34\x0f\x5c\x48\xfb\x44\x8a\x7e\x0f\x40\x5a\xb3\x52\xeb\x2f\xa2\xce\x47\x8b\x73\x63\x23\x5d\x12\x4f\x4f\x4e\x16\xb8\x12\x8d\xa6\x2f\xb6\xc0\x1c\x16\x3f\x2d\x16\x17\x04\xa3\x23\x3f\x22\xf6\x1c\x0a\x9a\x0a\x8e\x6b\xd1\xf8\xce\xb6\xde\xaa\x9f\xd1\xd1\x53\xbf\x1f\xb1\x73\x79\x17\xb5\xe7\xaf\x23\x3b\xd0\xd1\x80\xba\xf3\xb6\xbc\x59\x2c\x06\x16\xdd\xb9\xbb\xc3\x5f\xf8\x9b\x6d\x60\xa7\xb4\x06\x83\x58\x00\x95\xe8\x11\x68\x67\x0f\x81\x61\xcd\x5b\x3e\x22\x0c\x01\x59\x40\x4f\x62\xa9\x95\x2f\x61\x2b\xb4\x2a\x04\x61\x01\xdf\x3e\x3f\xf5\xec\xa4\x35\x06\x65\x80\x0f\x88\xb5\x50\xc6\x13\x44\xd3\x66\x92\xcf\x07\xf4\xee\x54\x40\xef\xae\x0e\xe8\xdd\xc5\x80\xde\x41\xf4\x6e\xc8\x23\xd8\x34\x4b\x74\x06\x09\x03\xb2\x49\xfb\x99\x7a\x73\xa7\x8f\xc4\x4c\x43\x7f\xf7\xbf\x0c\xfd\x29\xab\xdf\x0c\x56\xef\xf7\x68\x8a\xd1\xe1\x6f\x25\xc2\xca\x6a\x6d\x77\xca\xac\xbb\x68\x83\xf2\xb0\xb2\x0e\x1a\xcf\x6b\x02\x64\xe3\xc9\x56\xca\x63\x01\x1b\x63\x77\xe6\xd7\xd2\x7a\xf2\xb0\x52\x1a\xef\x7b\x46\xbb\x52\xc9\x32\x62\x64\x80\x91\x85\xc2\x1e\xa0\xc3\x44\xfc\xe1\xc0\xee\x0c\xac\x15\x71\x65\xb4\xe0\x04\x95\x03\x2a\x80\x4a\x61\x3a\xc1\x6b\x45\x65\xb3\x04\xeb\x18\x8e\xa0\xd5\x06\x53\x86\xe9\x2b\xad\x41\x68\x6f\x7b\x11\x15\xd7\x17\x50\x43\x3c\x94\x21\x1b\x68\xa4\x35\x24\x94\x41\x77\x0f\x4b\xd4\x76\x97\x9e\x84\x7d\x25\xda\xc8\x70\xc7\x78\x26\xcb\x65\x6e\xab\x0a\x04\x61\xc0\xfb\xf2\xd7\x08\xaa\x23\x73\xb9\x83\x28\x6b\x58\xcf\xca\x3a\x8c\x7a\x5b\x83\xf0\xdb\xa7\x82\xb7\xa8\xfd\x45\x69\xfc\xed\x6d\x70\x24\xc3\x5f\x18\x89\xf7\x9d\x2f\x5e\x39\xec\x19\x45\x5b\xa7\x3c\x3e\x2a\x7a\x68\x96\xc1\x3f\x29\x7c\xfd\x63\xb0\x05\x0d\xb9\x16\x36\xd8\x82\x2f\x6d\xa3\x0b\x58\x0e\x3c\x6e\xa3\x8a\xb7\x9d\x33\x23\xa3\xdb\x41\xf7\x5b\x96\x1b\xdc\x84\x05\x28\x03\xff\xce\x52\xef\xcb\x6c\xee\x8e\x03\xd8\xbd\x2f\x0b\xe5\x5e\x94\x86\xde\x97\xcf\xa7\x5f\xac\x41\x9c\x0a\x4f\x4f\x0f\x13\x88\xdf\x0c\x69\xf9\xf4\x10\xcc\x24\x0b\x42\x4a\xf4\x3e\x98\xff\xb1\xc3\x8b\x57\x64\x5d\x3b\x2b\xca\x6b\x45\xc9\x06\xdb\x97\x55\xe3\xb9\x12\xe3\xc3\x33\xcd\x03\xc8\xd1\xf4\x8e\x74\x28\x8a\xc4\x1a\xdd\xde\xc3\x0e\x61\x67\xcd\x2b\x82\x25\x02\x77\x2e\x56\x5e\x96\x95\x2d\x6e\x5e\x50\x72\x95\xef\xf3\xef\x80\x92\x3e\x05\xfb\x74\xa1\x52\x0c\x40\x67\x42\xcf\x30\x3d\xf8\x8c\xc1\x16\x9d\xf6\x16\x30\x5d\xa7\xf7\x20\x0e\x60\x2a\xc2\xe0\xc3\xa7\x52\xf8\xb4\xea\x59\x4c\xe4\xfc\xbd\xf1\x14\x00\xe8\x1b\x59\x06\x79\xf7\xc1\xf9\x9d\x2b\x46\xd9\xd0\xd3\x0b\xcd\x6e\x68\xa1\xb6\xca\x90\x07\x41\x90\x21\xc9\x8c\x21\x51\x64\x0c\x32\xd5\xa5\x03\x08\x0f\xe2\x20\x9e\xc5\x0e\x95\xa3\xeb\x29\x8d\xc7\xa3\x3c\xd8\x60\x7b\x1f\x34\x1c\x15\x94\x43\x72\x1e\x2a\x49\xcf\x66\x94\xaa\x62\x69\xb7\x78\x0f\x3b\x45\x25\x7b\x67\x9a\x92\x5d\x26\x85\xd1\x8b\x8d\x46\x21\xcb\x9e\x09\x3b\x51\x99\x60\x74\x04\xcb\x21\xd1\xb1\x80\x12\x1d\x9e\x4f\x99\x29\x02\xaf\x69\x0a\x21\x6d\x98\x2c\x86\xe6\x72\xda\x7c\x17\xf8\xce\xd7\xfc\xa3\xee\x2e\x1c\x06\xec\x04\xee\x11\x71\x7d\xb2\x29\xf4\x69\x2b\x2a\x7d\x54\x00\x85\x29\xba\x58\x74\x4d\x42\x48\x46\x8a\x72\x61\xbc\x6d\xd3\xd0\x59\xb4\x20\x42\xc7\xfd\x84\xc3\x87\x5c\xb4\xa4\x68\xfc\x50\xb9\x7a\x81\x14\xfa\x90\xab\xd0\xc5\x9c\xa8\xc4\x06\x63\x0d\x67\xbe\xd9\xc0\x78\xb0\xfc\x7c\x2c\xc6\xba\x27\xac\xfb\x4b\xa3\x12\x3a\xec\x98\xcb\x65\x11\x41\xc7\x11\x47\xac\x6a\x6a\x3f\x28\x97\xc3\xbe\x2f\x6c\x7d\x2f\xea\xe7\xe9\xf9\x64\x71\x34\x14\x77\xb1\x72\x18\xe2\x63\x2c\xdc\xe6\x3c\xdf\x7b\xba\x05\x55\x89\x35\xc6\x2e\x3d\xa1\x4c\xe1\x17\x65\xc2\xfc\x06\x15\xf7\x5b\x87\x92\xaf\x3a\x03\x3f\x87\x1a\x85\x47\xee\xaa\x81\x07\x6c\xe3\x3d\x89\x33\xb7\x24\xaa\x7d\x9e\x65\x65\xb3\x4c\x0b\x2b\x37\xe8\x52\x69\xab\xcc\x65\x3b\x14\x5b\xdc\x59\xb7\xf1\xd9\x44\x5a\x46\x62\xed\x47\xcc\x19\x13\x7c\xdd\xe1\xab\x10\xab\x40\x62\x3d\xc9\x1a\x88\x32\x73\xe8\xb8\x2b\x1b\x0a\x85\x2c\xa6\x6c\xf3\xd7\xe9\x22\x5d\x24\x4e\xfe\x61\x4a\xf7\xd8\x68\xfd\x68\xb5\x92\x6d\x0e\x9f\x56\x5f\x2d\x3d\x3a\xf4\x63\xf3\x6a\xeb\x68\x74\x5d\xe9\x27\x4b\xa2\x7a\x7a\x47\x88\x91\x78\xb4\x8e\x72\xf8\x61\xf1\xc3\x30\xe4\x6b\xb5\x45\x83\xde\x3f\x3a\xbb\xc4\x71\xf3\x60\x1e\x1f\x8f\xfb\x49\x3d\x67\x10\x96\x05\x95\x39\x64\x25\x0a\x4d\xe5\xbf\x46\x5b\xca\x28\x52\x42\x7f\x40\x2d\xda\x27\x94\xd6\x14\xdd\xad\xf0\xf0\x23\x55\xa1\x6d\xa8\xdf\xfb\xb1\xdf\x63\xd4\xab\xff\x53\xcd\xbc\x6d\x9c\x44\x3f\xd6\xc0\xe1\x3f\x1a\xf4\xe4\xa7\x5a\xc9\xba\xc9\xe1\xc7\x45\x35\x59\xac\xb0\xb2\xae\xcd\xe1\xa7\x37\x5f\x54\xbf\x11\x0b\xd3\x17\xae\x0e\x23\x1e\x77\xf0\xc9\x48\xdd\x14\x18\xbb\x65\x37\x58\x4e\xe7\xc0\xb3\xe3\xaa\x75\xf3\xfe\xc5\x2c\xb9\xac\xbd\x3d\x74\x99\xd1\x60\x59\xe2\xa1\x1d\x17\x28\xb5\x70\x58\xc4\xbe\x92\x8e\x68\x4f\xce\x4b\xb1\x06\x04\x6d\x1e\xa3\xbf\x9d\xb5\x14\x46\xae\xc9\x09\x0e\xe9\x9f\x8d\x6e\x73\xe0\x0b\xf4\x33\x73\x11\x5c\x1c\x76\xa6\xe2\x26\x0d\x78\x3e\x81\x9c\xef\x5a\x73\xcd\x27\xac\xe6\xb7\xcc\xe7\x4b\xee\x9c\xe5\x56\xb8\x8e\x25\x27\x7d\x76\x62\xa8\xbb\xa2\xca\xbe\x80\x6d\x16\xe8\xce\x3f\x2c\x9c\x70\xf0\xd9\x2b\xfe\x39\xe7\x30\xc1\xe4\xd8\x34\xb6\x17\x45\x88\x2b\xf9\x1f\x9f\x3c\x12\x71\x31\xcc\x67\x0c\x3a\x1f\xed\x89\x41\x73\xb0\x5e\x14\x21\xae\xe4\x7f\x7c\x72\x96\x0f\x47\x60\x13\x6e\x3d\xa9\x05\x0f\x76\xc7\x69\xbf\xe2\x86\x37\x79\x5b\x60\x2f\x27\x09\x85\xa5\xa4\x7f\xab\x7b\x37\xb9\x84\x1f\xbd\xd9\x9d\x5e\xed\x1c\xba\x69\x96\x98\xf8\xd6\x13\x56\xbd\x56\xcf\x3f\x54\xdd\x01\x2f\xc4\x72\xd3\xb8\xf0\x94\x76\x4a\xbf\xc3\xcb\x05\x3a\x4a\xb8\x3c\xbf\x9b\x7b\x29\x93\x22\x95\x8e\xce\x51\x63\xd0\xe1\xdd\x24\x2e\x47\x47\x36\xd8\x9e\x64\x9e\x91\xf6\xe9\x38\xff\x8f\x15\x3b\xa7\x55\x20\xbc\xa0\xd3\x16\x9d\x5a\xb5\x17\x75\xba\xce\xe8\x93\xb0\xfe\xd9\x56\x3c\x96\x83\x6d\xc2\xc5\xe1\xfc\x7b\xd4\xf3\xef\x50\x11\xc2\xff\x4d\x34\x66\xf4\xa7\xe2\x31\x3b\x74\x75\x44\xe6\xea\x5d\x1d\x93\x19\xe9\xa9\xa8\x7c\xa7\xf9\x43\x7a\x76\x99\xf0\x80\xba\xea\xde\xdc\xfd\xf4\xbd\x36\xe9\x3c\x52\xc4\x21\xb7\x1b\x38\x3d\xe7\xe3\x8c\x6a\xc6\xf6\x7d\x51\x28\x0e\x9f\xd0\xef\xdd\xda\x4f\x61\x30\xec\x71\x6d\x68\x18\x12\x7e\xbf\x07\x27\xcc\x1a\x2f\x51\x26\xe1\xf2\x3f\x79\xac\x1f\xbe\xfe\x13\x00\x00\xff\xff\x58\x77\x69\xdd\x3f\x18\x00\x00"),
		},
		"/tiller-ca-cert-configmap.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "tiller-ca-cert-configmap.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 226,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xc1\x0a\xc2\x30\x0c\x40\xef\xfd\x8a\xfc\x40\x07\x82\xa7\xde\xa4\x78\x53\x2f\x0e\xef\xb1\xcd\xb4\xd8\x66\xa3\x8b\x22\xd4\xfe\xbb\x6c\x4c\xd1\x63\x78\x2f\x2f\x29\x05\x42\x07\xcd\x96\xf1\x1c\xa9\x0d\x31\x52\x6e\x77\x47\xa8\x55\x6b\xad\x70\x08\x27\xca\x63\xe8\xd9\xc0\x63\xa5\x6e\x81\xbd\x01\xdb\x73\x17\x2e\x7b\x1c\x54\x22\x41\x8f\x82\x46\x01\x30\x26\x32\xd0\xc5\xfb\x53\x5f\x29\x26\x2d\x71\xd4\x0e\xb5\x9b\xe5\xe5\xc8\x01\x13\x8d\x03\x3a\x82\x5a\x97\x95\x79\x34\x50\xca\x3f\x2d\x05\x88\xfd\xa4\x7d\xfa\x0e\x1b\x97\xc5\xc0\x4b\x4d\x31\xf6\xc4\x02\x6b\x68\xbe\x1f\xdb\x8d\xa5\x2c\xb6\x67\x99\xc8\x6f\xe1\x1d\x00\x00\xff\xff\x60\xd7\x1c\xac\xe2\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/flux-helm-operator-account.yaml.tmpl"].(os.FileInfo),
		fs["/flux-helm-release-crd.yaml.tmpl"].(os.FileInfo),
		fs["/helm-operator-deployment.yaml.tmpl"].(os.FileInfo),
		fs["/tiller-ca-cert-configmap.yaml.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
